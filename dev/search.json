[{"path":[]},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to poissonreg","title":"Contributing to poissonreg","text":"outlines propose change poissonreg. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to poissonreg","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to poissonreg","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to poissonreg","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to poissonreg","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to poissonreg","text":"Please note poissonreg project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 poissonreg authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with poissonreg","title":"Getting help with poissonreg","text":"Thanks using poissonreg! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with poissonreg","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with poissonreg","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with poissonreg","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://poissonreg.tidymodels.org/dev/articles/examples.html","id":"poisson_reg-models","dir":"Articles","previous_headings":"","what":"poisson_reg() models","title":"Fitting and Predicting with poissonreg","text":"’ll model number articles published graduate students biochemistry Ph.D. programs. can define model: Now create model fit object: holdout data can predicted: ’ll model number articles published graduate students biochemistry Ph.D. programs. can define model specific parameters: Now create model fit object: holdout data can predicted: ’ll model number articles published graduate students biochemistry Ph.D. programs. can define model: Now create model fit object: holdout data can predicted: ’ll model number articles published graduate students biochemistry Ph.D. programs. can define model: Now create model fit object: holdout data can predicted: ’ll model number articles published graduate students biochemistry Ph.D. programs. can define model: Now create model fit object: holdout data can predicted:","code":"library(tidymodels) ## ── Attaching packages ───────────────────────────── tidymodels 1.3.0 ── ## ✔ broom        1.0.9     ✔ rsample      1.3.1   ## ✔ dials        1.4.2     ✔ tibble       3.3.0   ## ✔ dplyr        1.1.4     ✔ tidyr        1.3.1   ## ✔ infer        1.0.9     ✔ tune         2.0.0   ## ✔ modeldata    1.5.1     ✔ workflows    1.3.0   ## ✔ parsnip      1.3.3     ✔ workflowsets 1.1.1   ## ✔ purrr        1.1.0     ✔ yardstick    1.3.2   ## ✔ recipes      1.3.1 ## ── Conflicts ──────────────────────────────── tidymodels_conflicts() ──   ## ✖ purrr::discard() masks scales::discard()   ## ✖ dplyr::filter()  masks stats::filter()   ## ✖ dplyr::lag()     masks stats::lag()   ## ✖ recipes::step()  masks stats::step() library(poissonreg)   tidymodels_prefer()      data(bioChemists, package = \"pscl\")      biochemists_train <- bioChemists[-c(1:5), ]   biochemists_test <- bioChemists[1:5, ] pr_spec <-      poisson_reg() |>     set_engine(\"glm\") |>      set_mode(\"regression\")    pr_spec ## Poisson Regression Model Specification (regression)   ##    ## Computational engine: glm set.seed(1)   pr_fit <- pr_spec |> fit(art ~ ., data = biochemists_train)   pr_fit ## parsnip model object   ##    ##    ## Call:  stats::glm(formula = art ~ ., family = stats::poisson, data = data)   ##    ## Coefficients:   ## (Intercept)     femWomen   marMarried         kid5          phd     ##     0.32187     -0.22207      0.14916     -0.18580      0.01003     ##        ment     ##     0.02559     ##    ## Degrees of Freedom: 909 Total (i.e. Null);  904 Residual   ## Null Deviance:     1800    ## Residual Deviance: 1618    AIC: 3298 predict(pr_fit, biochemists_test) ## # A tibble: 5 × 1   ##   .pred   ##   <dbl>   ## 1  1.96   ## 2  1.32   ## 3  1.34   ## 4  1.45   ## 5  2.23 library(tidymodels)   library(poissonreg)   tidymodels_prefer()      data(bioChemists, package = \"pscl\")      biochemists_train <- bioChemists[-c(1:5), ]   biochemists_test <- bioChemists[1:5, ] pr_spec <-      poisson_reg(penalty = 0.1) |>     set_engine(\"glmnet\") |>      set_mode(\"regression\")    pr_spec ## Poisson Regression Model Specification (regression)   ##    ## Main Arguments:   ##   penalty = 0.1   ##    ## Computational engine: glmnet set.seed(1)   pr_fit <- pr_spec |> fit(art ~ ., data = biochemists_train)   pr_fit ## parsnip model object   ##    ##    ## Call:  glmnet::glmnet(x = maybe_matrix(x), y = y, family = \"poisson\")    ##    ##    Df  %Dev  Lambda   ## 1   0  0.00 0.59250   ## 2   1  1.71 0.53980   ## 3   1  3.03 0.49190   ## 4   1  4.06 0.44820   ## 5   1  4.88 0.40840   ## 6   1  5.52 0.37210   ## 7   1  6.04 0.33900   ## 8   1  6.45 0.30890   ## 9   1  6.78 0.28150   ## 10  1  7.04 0.25650   ## 11  1  7.26 0.23370   ## 12  1  7.43 0.21290   ## 13  1  7.58 0.19400   ## 14  1  7.69 0.17680   ## 15  2  7.80 0.16110   ## 16  2  7.99 0.14680   ## 17  2  8.14 0.13370   ## 18  3  8.33 0.12180   ## 19  3  8.58 0.11100   ## 20  3  8.79 0.10120   ## 21  3  8.96 0.09217   ## 22  3  9.11 0.08398   ## 23  3  9.22 0.07652   ## 24  3  9.32 0.06972   ## 25  4  9.45 0.06353   ## 26  4  9.57 0.05789   ## 27  4  9.67 0.05274   ## 28  4  9.74 0.04806   ## 29  4  9.81 0.04379   ## 30  4  9.87 0.03990   ## 31  4  9.91 0.03635   ## 32  4  9.95 0.03312   ## 33  4  9.98 0.03018   ## 34  4 10.01 0.02750   ## 35  4 10.03 0.02506   ## 36  4 10.05 0.02283   ## 37  4 10.06 0.02080   ## 38  4 10.07 0.01896   ## 39  5 10.08 0.01727   ## 40  5 10.09 0.01574   ## 41  5 10.10 0.01434   ## 42  5 10.11 0.01306   ## 43  5 10.11 0.01190   ## 44  5 10.12 0.01085   ## 45  5 10.12 0.00988   ## 46  5 10.13 0.00901   ## 47  5 10.13 0.00820   ## 48  5 10.13 0.00748   ## 49  5 10.13 0.00681   ## 50  5 10.13 0.00621   ## 51  5 10.14 0.00566   ## 52  5 10.14 0.00515   ## 53  5 10.14 0.00470   ## 54  5 10.14 0.00428   ## 55  5 10.14 0.00390   ## 56  5 10.14 0.00355   ## 57  5 10.14 0.00324   ## 58  5 10.14 0.00295   ## 59  5 10.14 0.00269   ## 60  5 10.14 0.00245   ## 61  5 10.14 0.00223   ## 62  5 10.14 0.00203 predict(pr_fit, biochemists_test) ## # A tibble: 5 × 1   ##   .pred   ##   <dbl>   ## 1  1.67   ## 2  1.51   ## 3  1.51   ## 4  1.49   ## 5  2.36 library(tidymodels)   library(poissonreg)   tidymodels_prefer()      data(bioChemists, package = \"pscl\")      biochemists_train <- bioChemists[-c(1:5), ]   biochemists_test <- bioChemists[1:5, ] pr_spec <-      poisson_reg() |>     set_engine(\"hurdle\") |>      set_mode(\"regression\")    pr_spec ## Poisson Regression Model Specification (regression)   ##    ## Computational engine: hurdle set.seed(1)   pr_fit <- pr_spec |> fit(art ~ . | ., data = biochemists_train)   pr_fit ## parsnip model object   ##    ##    ## Call:   ## pscl::hurdle(formula = art ~ . | ., data = data)   ##    ## Count model coefficients (truncated poisson with log link):   ## (Intercept)     femWomen   marMarried         kid5          phd     ##     0.67114     -0.22858      0.09648     -0.14219     -0.01273     ##        ment     ##     0.01875     ##    ## Zero hurdle model coefficients (binomial with logit link):   ## (Intercept)     femWomen   marMarried         kid5          phd     ##     0.28643     -0.24805      0.30873     -0.29088      0.01038     ##        ment     ##     0.08317 predict(pr_fit, biochemists_test) ## # A tibble: 5 × 1   ##   .pred   ##   <dbl>   ## 1  2.02   ## 2  1.32   ## 3  1.31   ## 4  1.45   ## 5  2.40 library(tidymodels)   library(poissonreg)   tidymodels_prefer()      data(bioChemists, package = \"pscl\")      biochemists_train <- bioChemists[-c(1:5), ]   biochemists_test <- bioChemists[1:5, ] pr_spec <-      poisson_reg() |>     set_engine(\"stan\") |>      set_mode(\"regression\")    pr_spec ## Poisson Regression Model Specification (regression)   ##    ## Computational engine: stan set.seed(1)   pr_fit <- pr_spec |> fit(art ~ ., data = biochemists_train) ##    ## SAMPLING FOR MODEL 'count' NOW (CHAIN 1).   ## Chain 1:    ## Chain 1: Gradient evaluation took 5.2e-05 seconds   ## Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.52 seconds.   ## Chain 1: Adjust your expectations accordingly!   ## Chain 1:    ## Chain 1:    ## Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)   ## Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)   ## Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)   ## Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)   ## Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)   ## Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)   ## Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)   ## Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)   ## Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)   ## Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)   ## Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)   ## Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)   ## Chain 1:    ## Chain 1:  Elapsed Time: 0.238 seconds (Warm-up)   ## Chain 1:                0.249 seconds (Sampling)   ## Chain 1:                0.487 seconds (Total)   ## Chain 1:    ##    ## SAMPLING FOR MODEL 'count' NOW (CHAIN 2).   ## Chain 2:    ## Chain 2: Gradient evaluation took 6.4e-05 seconds   ## Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.64 seconds.   ## Chain 2: Adjust your expectations accordingly!   ## Chain 2:    ## Chain 2:    ## Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)   ## Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)   ## Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)   ## Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)   ## Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)   ## Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)   ## Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)   ## Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)   ## Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)   ## Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)   ## Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)   ## Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)   ## Chain 2:    ## Chain 2:  Elapsed Time: 0.235 seconds (Warm-up)   ## Chain 2:                0.257 seconds (Sampling)   ## Chain 2:                0.492 seconds (Total)   ## Chain 2:    ##    ## SAMPLING FOR MODEL 'count' NOW (CHAIN 3).   ## Chain 3:    ## Chain 3: Gradient evaluation took 2.9e-05 seconds   ## Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.29 seconds.   ## Chain 3: Adjust your expectations accordingly!   ## Chain 3:    ## Chain 3:    ## Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)   ## Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)   ## Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)   ## Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)   ## Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)   ## Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)   ## Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)   ## Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)   ## Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)   ## Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)   ## Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)   ## Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)   ## Chain 3:    ## Chain 3:  Elapsed Time: 0.235 seconds (Warm-up)   ## Chain 3:                0.316 seconds (Sampling)   ## Chain 3:                0.551 seconds (Total)   ## Chain 3:    ##    ## SAMPLING FOR MODEL 'count' NOW (CHAIN 4).   ## Chain 4:    ## Chain 4: Gradient evaluation took 4e-05 seconds   ## Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.4 seconds.   ## Chain 4: Adjust your expectations accordingly!   ## Chain 4:    ## Chain 4:    ## Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)   ## Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)   ## Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)   ## Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)   ## Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)   ## Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)   ## Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)   ## Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)   ## Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)   ## Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)   ## Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)   ## Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)   ## Chain 4:    ## Chain 4:  Elapsed Time: 0.224 seconds (Warm-up)   ## Chain 4:                0.286 seconds (Sampling)   ## Chain 4:                0.51 seconds (Total)   ## Chain 4: pr_fit ## parsnip model object   ##    ## stan_glm   ##  family:       poisson [log]   ##  formula:      art ~ .   ##  observations: 910   ##  predictors:   6   ## ------   ##             Median MAD_SD   ## (Intercept)  0.3    0.1     ## femWomen    -0.2    0.1     ## marMarried   0.2    0.1     ## kid5        -0.2    0.0     ## phd          0.0    0.0     ## ment         0.0    0.0     ##    ## ------   ## * For help interpreting the printed output see ?print.stanreg   ## * For info on the priors used see ?prior_summary.stanreg predict(pr_fit, biochemists_test) ## # A tibble: 5 × 1   ##   .pred   ##   <dbl>   ## 1 0.674   ## 2 0.271   ## 3 0.289   ## 4 0.371   ## 5 0.800 library(tidymodels)   library(poissonreg)   tidymodels_prefer()      data(bioChemists, package = \"pscl\")      biochemists_train <- bioChemists[-c(1:5), ]   biochemists_test <- bioChemists[1:5, ] pr_spec <-      poisson_reg() |>     set_engine(\"zeroinfl\") |>      set_mode(\"regression\")    pr_spec ## Poisson Regression Model Specification (regression)   ##    ## Computational engine: zeroinfl set.seed(1)   pr_fit <- pr_spec |> fit(art ~ . | ., data = biochemists_train)   pr_fit ## parsnip model object   ##    ##    ## Call:   ## pscl::zeroinfl(formula = art ~ . | ., data = data)   ##    ## Count model coefficients (poisson with log link):   ## (Intercept)     femWomen   marMarried         kid5          phd     ##    0.637600    -0.205020     0.099136    -0.143444    -0.005037     ##        ment     ##    0.018101     ##    ## Zero-inflation model coefficients (binomial with logit link):   ## (Intercept)     femWomen   marMarried         kid5          phd     ##    -0.65529      0.12466     -0.35861      0.22921      0.03238     ##        ment     ##    -0.14778 predict(pr_fit, biochemists_test) ## # A tibble: 5 × 1   ##   .pred   ##   <dbl>   ## 1  2.05   ## 2  1.35   ## 3  1.32   ## 4  1.46   ## 5  2.39"},{"path":"https://poissonreg.tidymodels.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Kuhn. Author. Hannah Frick. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuhn M, Frick H (2025). poissonreg: Model Wrappers Poisson Regression. R package version 1.0.1.9001, https://github.com/tidymodels/poissonreg.","code":"@Manual{,   title = {poissonreg: Model Wrappers for Poisson Regression},   author = {Max Kuhn and Hannah Frick},   year = {2025},   note = {R package version 1.0.1.9001},   url = {https://github.com/tidymodels/poissonreg}, }"},{"path":"https://poissonreg.tidymodels.org/dev/index.html","id":"poissonreg-","dir":"","previous_headings":"","what":"Model Wrappers for Poisson Regression","title":"Model Wrappers for Poisson Regression","text":"poissonreg enables parsnip package fit various types Poisson regression models including ordinary generalized linear models, simple Bayesian models (via rstanarm), two zero-inflated Poisson models (via pscl).","code":""},{"path":"https://poissonreg.tidymodels.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Wrappers for Poisson Regression","text":"can install released version poissonreg CRAN : Install development version GitHub :","code":"install.packages(\"poissonreg\") # install.packages(\"pak\") pak::pak(\"tidymodels/poissonreg\")"},{"path":"https://poissonreg.tidymodels.org/dev/index.html","id":"available-engines","dir":"","previous_headings":"","what":"Available Engines","title":"Model Wrappers for Poisson Regression","text":"poissonreg package provides engines models following table.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Model Wrappers for Poisson Regression","text":"log-linear model categorical data analysis:","code":"library(poissonreg)  # 3D contingency table from Agresti (2007): poisson_reg() |>   set_engine(\"glm\") |>   fit(count ~ (.)^2, data = seniors) #> parsnip model object #>  #>  #> Call:  stats::glm(formula = count ~ (.)^2, family = stats::poisson,  #>     data = data) #>  #> Coefficients: #>               (Intercept)               marijuanayes   #>                    5.6334                    -5.3090   #>              cigaretteyes                 alcoholyes   #>                   -1.8867                     0.4877   #> marijuanayes:cigaretteyes    marijuanayes:alcoholyes   #>                    2.8479                     2.9860   #>   cigaretteyes:alcoholyes   #>                    2.0545   #>  #> Degrees of Freedom: 7 Total (i.e. Null);  1 Residual #> Null Deviance:       2851  #> Residual Deviance: 0.374     AIC: 63.42"},{"path":"https://poissonreg.tidymodels.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Model Wrappers for Poisson Regression","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post RStudio Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/poissonreg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"parsnip methods for Poisson regression — poissonreg-package","title":"parsnip methods for Poisson regression — poissonreg-package","text":"poissonreg offers function fit model count data using Poisson generalized linear models via different methods zero-inflated Poisson (ZIP) models.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/poissonreg-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"parsnip methods for Poisson regression — poissonreg-package","text":"model function works tidymodels infrastructure model can resampled, tuned, tided, etc.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/poissonreg-package.html","id":"example","dir":"Reference","previous_headings":"","what":"Example","title":"parsnip methods for Poisson regression — poissonreg-package","text":"Let’s fit model data Agresti (2007) Table 7.6:     different engines model provided package :","code":"library(poissonreg) library(tidymodels) tidymodels_prefer()  log_lin_fit <-   # Define the model   poisson_reg() |>   # Choose an engine for fitting. The default is 'glm' so   # this next line is not strictly needed:   set_engine(\"glm\") |>   # Fit the model to the data:   fit(count ~ (.)^2, data = seniors)  log_lin_fit ## parsnip model object ## ## ## Call:  stats::glm(formula = count ~ (.)^2, family = stats::poisson, ##     data = data) ## ## Coefficients: ##               (Intercept)               marijuanayes ##                    5.6334                    -5.3090 ##              cigaretteyes                 alcoholyes ##                   -1.8867                     0.4877 ## marijuanayes:cigaretteyes    marijuanayes:alcoholyes ##                    2.8479                     2.9860 ##   cigaretteyes:alcoholyes ##                    2.0545 ## ## Degrees of Freedom: 7 Total (i.e. Null);  1 Residual ## Null Deviance:       2851 ## Residual Deviance: 0.374     AIC: 63.42 show_engines(\"poisson_reg\") ## # A tibble: 5 x 2 ##   engine   mode ##   <chr>    <chr> ## 1 glm      regression ## 2 hurdle   regression ## 3 zeroinfl regression ## 4 glmnet   regression ## 5 stan     regression"},{"path":[]},{"path":"https://poissonreg.tidymodels.org/dev/reference/poissonreg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"parsnip methods for Poisson regression — poissonreg-package","text":"Maintainer: Hannah Frick hannah@posit.co (ORCID) Authors: Max Kuhn max@posit.co (ORCID) contributors: Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/predict_raw._fishnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Model predictions across many sub-models — predict_raw._fishnet","title":"Model predictions across many sub-models — predict_raw._fishnet","text":"models, predictions can made sub-models model object.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/predict_raw._fishnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model predictions across many sub-models — predict_raw._fishnet","text":"","code":"# S3 method for class '`_fishnet`' predict_raw(object, new_data, opts = list(), ...)  # S3 method for class '`_fishnet`' multi_predict(object, new_data, type = NULL, penalty = NULL, ...)"},{"path":"https://poissonreg.tidymodels.org/dev/reference/predict_raw._fishnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model predictions across many sub-models — predict_raw._fishnet","text":"object model_fit object. new_data rectangular data object, data frame. opts list options.. ... Optional arguments pass predict.model_fit(type = \"raw\") type. penalty numeric vector penalty values.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/predict_raw._fishnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model predictions across many sub-models — predict_raw._fishnet","text":"tibble number rows data predicted. list-column named .pred contains tibbles multiple rows per sub-model.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/seniors.html","id":null,"dir":"Reference","previous_headings":"","what":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","title":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","text":"Alcohol, Cigarette, Marijuana Use High School Seniors","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/seniors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","text":"Agresti, (2007). Introduction Categorical Data Analysis.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/seniors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","text":"seniors tibble","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/seniors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","text":"Data Table 7.3 Agresti (2007). first three columns make data 3-way contingency table.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/seniors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alcohol, Cigarette, and Marijuana Use for High School Seniors — seniors","text":"","code":"data(seniors) str(seniors) #> tibble [8 × 4] (S3: tbl_df/tbl/data.frame) #>  $ marijuana: chr [1:8] \"yes\" \"no\" \"yes\" \"no\" ... #>  $ cigarette: chr [1:8] \"yes\" \"yes\" \"no\" \"no\" ... #>  $ alcohol  : chr [1:8] \"yes\" \"yes\" \"yes\" \"yes\" ... #>  $ count    : num [1:8] 911 538 44 456 3 43 2 279"},{"path":"https://poissonreg.tidymodels.org/dev/reference/tidy_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn zero-inflated model results into a tidy tibble — tidy_zip","title":"Turn zero-inflated model results into a tidy tibble — tidy_zip","text":"Turn zero-inflated model results tidy tibble","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/tidy_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn zero-inflated model results into a tidy tibble — tidy_zip","text":"","code":"# S3 method for class 'zeroinfl' tidy(x, type = \"count\", ...)  # S3 method for class 'hurdle' tidy(x, type = \"count\", ...)"},{"path":"https://poissonreg.tidymodels.org/dev/reference/tidy_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn zero-inflated model results into a tidy tibble — tidy_zip","text":"x hurdle zeroinfl model object. type character string model coefficients return: \"\", \"count\", \"zero\". ... currently used.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/reference/tidy_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn zero-inflated model results into a tidy tibble — tidy_zip","text":"tibble","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-development-version","dir":"Changelog","previous_headings":"","what":"poissonreg (development version)","title":"poissonreg (development version)","text":"Predictions via multi_predict() glmnet models now correctly default mean counts instead linear predictor (#89). Predictions single observation now work poisson_reg() \"glmnet\" engine (#48). Removed now obsolete registration predict_raw() generic now exported parsnip (#52). Removed unused internal s3_register() function (#53). Tests model specification updated current testing pattern parsnip extension packages (#55). predict() method \"glmnet\" engine now checks penalty value via parsnip::.check_glmnet_penalty_predict() instead copied version function (#57). Moved imports declaration global variables standard place (#59). Tests now self-contained (#60). Predictions type \"conf_int\" \"stan\" engine now use function suggested rstanarm (#86). Removed obsolete check supplying newdata argument predict() multi_predict() (#87).","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-101","dir":"Changelog","previous_headings":"","what":"poissonreg 1.0.1","title":"poissonreg 1.0.1","text":"CRAN release: 2022-08-22 Update .Rd files generate valid HTML5","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-100","dir":"Changelog","previous_headings":"","what":"poissonreg 1.0.0","title":"poissonreg 1.0.0","text":"CRAN release: 2022-06-15 Changes using case weights parsnip 1.0.0.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-020","dir":"Changelog","previous_headings":"","what":"poissonreg 0.2.0","title":"poissonreg 0.2.0","text":"CRAN release: 2022-03-09 Model definition functions (e.g. poisson_reg()) moved parsnip package.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-011","dir":"Changelog","previous_headings":"","what":"poissonreg 0.1.1","title":"poissonreg 0.1.1","text":"CRAN release: 2021-08-07 default engine glm added poisson_reg(). Added tidy() methods pscl::hurdle() pscl::zeroinfl().","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-010","dir":"Changelog","previous_headings":"","what":"poissonreg 0.1.0","title":"poissonreg 0.1.0","text":"CRAN release: 2020-10-28 Work-around glmnet bug different column order silently produce incorrect predictions. multi_predict() enabled. Updates go along new version parsnip.","code":""},{"path":"https://poissonreg.tidymodels.org/dev/news/index.html","id":"poissonreg-001","dir":"Changelog","previous_headings":"","what":"poissonreg 0.0.1","title":"poissonreg 0.0.1","text":"CRAN release: 2020-04-14 Added NEWS.md file track changes package.","code":""}]
